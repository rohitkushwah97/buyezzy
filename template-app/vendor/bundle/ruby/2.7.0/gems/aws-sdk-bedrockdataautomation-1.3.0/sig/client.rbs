# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module BedrockDataAutomation
    class Client < ::Seahorse::Client::Base
      include ::Aws::ClientStubs

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BedrockDataAutomation/Client.html#initialize-instance_method
      def self.new: (
                      ?credentials: untyped,
                      ?region: String,
                      ?access_key_id: String,
                      ?account_id: String,
                      ?active_endpoint_cache: bool,
                      ?adaptive_retry_wait_to_fill: bool,
                      ?client_side_monitoring: bool,
                      ?client_side_monitoring_client_id: String,
                      ?client_side_monitoring_host: String,
                      ?client_side_monitoring_port: Integer,
                      ?client_side_monitoring_publisher: untyped,
                      ?convert_params: bool,
                      ?correct_clock_skew: bool,
                      ?defaults_mode: String,
                      ?disable_host_prefix_injection: bool,
                      ?disable_request_compression: bool,
                      ?endpoint: String,
                      ?endpoint_cache_max_entries: Integer,
                      ?endpoint_cache_max_threads: Integer,
                      ?endpoint_cache_poll_interval: Integer,
                      ?endpoint_discovery: bool,
                      ?ignore_configured_endpoint_urls: bool,
                      ?log_formatter: untyped,
                      ?log_level: Symbol,
                      ?logger: untyped,
                      ?max_attempts: Integer,
                      ?profile: String,
                      ?request_checksum_calculation: String,
                      ?request_min_compression_size_bytes: Integer,
                      ?response_checksum_validation: String,
                      ?retry_backoff: Proc,
                      ?retry_base_delay: Float,
                      ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer),
                      ?retry_limit: Integer,
                      ?retry_max_delay: Integer,
                      ?retry_mode: ("legacy" | "standard" | "adaptive"),
                      ?sdk_ua_app_id: String,
                      ?secret_access_key: String,
                      ?session_token: String,
                      ?sigv4a_signing_region_set: Array[String],
                      ?stub_responses: untyped,
                      ?telemetry_provider: Aws::Telemetry::TelemetryProviderBase,
                      ?token_provider: untyped,
                      ?use_dualstack_endpoint: bool,
                      ?use_fips_endpoint: bool,
                      ?validate_params: bool,
                      ?endpoint_provider: untyped,
                      ?http_proxy: String,
                      ?http_open_timeout: (Float | Integer),
                      ?http_read_timeout: (Float | Integer),
                      ?http_idle_timeout: (Float | Integer),
                      ?http_continue_timeout: (Float | Integer),
                      ?ssl_timeout: (Float | Integer | nil),
                      ?http_wire_trace: bool,
                      ?ssl_verify_peer: bool,
                      ?ssl_ca_bundle: String,
                      ?ssl_ca_directory: String,
                      ?ssl_ca_store: String,
                      ?on_chunk_received: Proc,
                      ?on_chunk_sent: Proc,
                      ?raise_response_errors: bool
                    ) -> instance
                  | (?Hash[Symbol, untyped]) -> instance


      interface _CreateBlueprintResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateBlueprintResponse]
        def blueprint: () -> Types::Blueprint
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BedrockDataAutomation/Client.html#create_blueprint-instance_method
      def create_blueprint: (
                              blueprint_name: ::String,
                              type: ("DOCUMENT" | "IMAGE"),
                              ?blueprint_stage: ("DEVELOPMENT" | "LIVE"),
                              schema: ::String,
                              ?client_token: ::String,
                              ?encryption_configuration: {
                                kms_key_id: ::String,
                                kms_encryption_context: Hash[::String, ::String]?
                              }
                            ) -> _CreateBlueprintResponseSuccess
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateBlueprintResponseSuccess

      interface _CreateBlueprintVersionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateBlueprintVersionResponse]
        def blueprint: () -> Types::Blueprint
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BedrockDataAutomation/Client.html#create_blueprint_version-instance_method
      def create_blueprint_version: (
                                      blueprint_arn: ::String,
                                      ?client_token: ::String
                                    ) -> _CreateBlueprintVersionResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateBlueprintVersionResponseSuccess

      interface _CreateDataAutomationProjectResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateDataAutomationProjectResponse]
        def project_arn: () -> ::String
        def project_stage: () -> ("DEVELOPMENT" | "LIVE")
        def status: () -> ("COMPLETED" | "IN_PROGRESS" | "FAILED")
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BedrockDataAutomation/Client.html#create_data_automation_project-instance_method
      def create_data_automation_project: (
                                            project_name: ::String,
                                            ?project_description: ::String,
                                            ?project_stage: ("DEVELOPMENT" | "LIVE"),
                                            standard_output_configuration: {
                                              document: {
                                                extraction: {
                                                  granularity: {
                                                    types: Array[("DOCUMENT" | "PAGE" | "ELEMENT" | "WORD" | "LINE")]?
                                                  },
                                                  bounding_box: {
                                                    state: ("ENABLED" | "DISABLED")
                                                  }
                                                }?,
                                                generative_field: {
                                                  state: ("ENABLED" | "DISABLED")
                                                }?,
                                                output_format: {
                                                  text_format: {
                                                    types: Array[("PLAIN_TEXT" | "MARKDOWN" | "HTML" | "CSV")]?
                                                  },
                                                  additional_file_format: {
                                                    state: ("ENABLED" | "DISABLED")
                                                  }
                                                }?
                                              }?,
                                              image: {
                                                extraction: {
                                                  category: {
                                                    state: ("ENABLED" | "DISABLED"),
                                                    types: Array[("CONTENT_MODERATION" | "TEXT_DETECTION")]?
                                                  },
                                                  bounding_box: {
                                                    state: ("ENABLED" | "DISABLED")
                                                  }
                                                }?,
                                                generative_field: {
                                                  state: ("ENABLED" | "DISABLED"),
                                                  types: Array[("IMAGE_SUMMARY" | "IAB")]?
                                                }?
                                              }?,
                                              video: {
                                                extraction: {
                                                  category: {
                                                    state: ("ENABLED" | "DISABLED"),
                                                    types: Array[("CONTENT_MODERATION" | "TEXT_DETECTION" | "TRANSCRIPT")]?
                                                  },
                                                  bounding_box: {
                                                    state: ("ENABLED" | "DISABLED")
                                                  }
                                                }?,
                                                generative_field: {
                                                  state: ("ENABLED" | "DISABLED"),
                                                  types: Array[("VIDEO_SUMMARY" | "SCENE_SUMMARY" | "IAB")]?
                                                }?
                                              }?,
                                              audio: {
                                                extraction: {
                                                  category: {
                                                    state: ("ENABLED" | "DISABLED"),
                                                    types: Array[("AUDIO_CONTENT_MODERATION" | "CHAPTER_CONTENT_MODERATION" | "TRANSCRIPT")]?
                                                  }
                                                }?,
                                                generative_field: {
                                                  state: ("ENABLED" | "DISABLED"),
                                                  types: Array[("AUDIO_SUMMARY" | "CHAPTER_SUMMARY" | "IAB")]?
                                                }?
                                              }?
                                            },
                                            ?custom_output_configuration: {
                                              blueprints: Array[
                                                {
                                                  blueprint_arn: ::String,
                                                  blueprint_version: ::String?,
                                                  blueprint_stage: ("DEVELOPMENT" | "LIVE")?
                                                },
                                              ]?
                                            },
                                            ?override_configuration: {
                                              document: {
                                                splitter: {
                                                  state: ("ENABLED" | "DISABLED")?
                                                }?
                                              }?
                                            },
                                            ?client_token: ::String,
                                            ?encryption_configuration: {
                                              kms_key_id: ::String,
                                              kms_encryption_context: Hash[::String, ::String]?
                                            }
                                          ) -> _CreateDataAutomationProjectResponseSuccess
                                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateDataAutomationProjectResponseSuccess

      interface _DeleteBlueprintResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteBlueprintResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BedrockDataAutomation/Client.html#delete_blueprint-instance_method
      def delete_blueprint: (
                              blueprint_arn: ::String,
                              ?blueprint_version: ::String
                            ) -> _DeleteBlueprintResponseSuccess
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteBlueprintResponseSuccess

      interface _DeleteDataAutomationProjectResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteDataAutomationProjectResponse]
        def project_arn: () -> ::String
        def status: () -> ("COMPLETED" | "IN_PROGRESS" | "FAILED")
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BedrockDataAutomation/Client.html#delete_data_automation_project-instance_method
      def delete_data_automation_project: (
                                            project_arn: ::String
                                          ) -> _DeleteDataAutomationProjectResponseSuccess
                                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteDataAutomationProjectResponseSuccess

      interface _GetBlueprintResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetBlueprintResponse]
        def blueprint: () -> Types::Blueprint
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BedrockDataAutomation/Client.html#get_blueprint-instance_method
      def get_blueprint: (
                           blueprint_arn: ::String,
                           ?blueprint_version: ::String,
                           ?blueprint_stage: ("DEVELOPMENT" | "LIVE")
                         ) -> _GetBlueprintResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetBlueprintResponseSuccess

      interface _GetDataAutomationProjectResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetDataAutomationProjectResponse]
        def project: () -> Types::DataAutomationProject
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BedrockDataAutomation/Client.html#get_data_automation_project-instance_method
      def get_data_automation_project: (
                                         project_arn: ::String,
                                         ?project_stage: ("DEVELOPMENT" | "LIVE")
                                       ) -> _GetDataAutomationProjectResponseSuccess
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetDataAutomationProjectResponseSuccess

      interface _ListBlueprintsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListBlueprintsResponse]
        def blueprints: () -> ::Array[Types::BlueprintSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BedrockDataAutomation/Client.html#list_blueprints-instance_method
      def list_blueprints: (
                             ?blueprint_arn: ::String,
                             ?resource_owner: ("SERVICE" | "ACCOUNT"),
                             ?blueprint_stage_filter: ("DEVELOPMENT" | "LIVE" | "ALL"),
                             ?max_results: ::Integer,
                             ?next_token: ::String,
                             ?project_filter: {
                               project_arn: ::String,
                               project_stage: ("DEVELOPMENT" | "LIVE")?
                             }
                           ) -> _ListBlueprintsResponseSuccess
                         | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListBlueprintsResponseSuccess

      interface _ListDataAutomationProjectsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListDataAutomationProjectsResponse]
        def projects: () -> ::Array[Types::DataAutomationProjectSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BedrockDataAutomation/Client.html#list_data_automation_projects-instance_method
      def list_data_automation_projects: (
                                           ?max_results: ::Integer,
                                           ?next_token: ::String,
                                           ?project_stage_filter: ("DEVELOPMENT" | "LIVE" | "ALL"),
                                           ?blueprint_filter: {
                                             blueprint_arn: ::String,
                                             blueprint_version: ::String?,
                                             blueprint_stage: ("DEVELOPMENT" | "LIVE")?
                                           },
                                           ?resource_owner: ("SERVICE" | "ACCOUNT")
                                         ) -> _ListDataAutomationProjectsResponseSuccess
                                       | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListDataAutomationProjectsResponseSuccess

      interface _UpdateBlueprintResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateBlueprintResponse]
        def blueprint: () -> Types::Blueprint
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BedrockDataAutomation/Client.html#update_blueprint-instance_method
      def update_blueprint: (
                              blueprint_arn: ::String,
                              schema: ::String,
                              ?blueprint_stage: ("DEVELOPMENT" | "LIVE")
                            ) -> _UpdateBlueprintResponseSuccess
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateBlueprintResponseSuccess

      interface _UpdateDataAutomationProjectResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateDataAutomationProjectResponse]
        def project_arn: () -> ::String
        def project_stage: () -> ("DEVELOPMENT" | "LIVE")
        def status: () -> ("COMPLETED" | "IN_PROGRESS" | "FAILED")
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BedrockDataAutomation/Client.html#update_data_automation_project-instance_method
      def update_data_automation_project: (
                                            project_arn: ::String,
                                            ?project_stage: ("DEVELOPMENT" | "LIVE"),
                                            ?project_description: ::String,
                                            standard_output_configuration: {
                                              document: {
                                                extraction: {
                                                  granularity: {
                                                    types: Array[("DOCUMENT" | "PAGE" | "ELEMENT" | "WORD" | "LINE")]?
                                                  },
                                                  bounding_box: {
                                                    state: ("ENABLED" | "DISABLED")
                                                  }
                                                }?,
                                                generative_field: {
                                                  state: ("ENABLED" | "DISABLED")
                                                }?,
                                                output_format: {
                                                  text_format: {
                                                    types: Array[("PLAIN_TEXT" | "MARKDOWN" | "HTML" | "CSV")]?
                                                  },
                                                  additional_file_format: {
                                                    state: ("ENABLED" | "DISABLED")
                                                  }
                                                }?
                                              }?,
                                              image: {
                                                extraction: {
                                                  category: {
                                                    state: ("ENABLED" | "DISABLED"),
                                                    types: Array[("CONTENT_MODERATION" | "TEXT_DETECTION")]?
                                                  },
                                                  bounding_box: {
                                                    state: ("ENABLED" | "DISABLED")
                                                  }
                                                }?,
                                                generative_field: {
                                                  state: ("ENABLED" | "DISABLED"),
                                                  types: Array[("IMAGE_SUMMARY" | "IAB")]?
                                                }?
                                              }?,
                                              video: {
                                                extraction: {
                                                  category: {
                                                    state: ("ENABLED" | "DISABLED"),
                                                    types: Array[("CONTENT_MODERATION" | "TEXT_DETECTION" | "TRANSCRIPT")]?
                                                  },
                                                  bounding_box: {
                                                    state: ("ENABLED" | "DISABLED")
                                                  }
                                                }?,
                                                generative_field: {
                                                  state: ("ENABLED" | "DISABLED"),
                                                  types: Array[("VIDEO_SUMMARY" | "SCENE_SUMMARY" | "IAB")]?
                                                }?
                                              }?,
                                              audio: {
                                                extraction: {
                                                  category: {
                                                    state: ("ENABLED" | "DISABLED"),
                                                    types: Array[("AUDIO_CONTENT_MODERATION" | "CHAPTER_CONTENT_MODERATION" | "TRANSCRIPT")]?
                                                  }
                                                }?,
                                                generative_field: {
                                                  state: ("ENABLED" | "DISABLED"),
                                                  types: Array[("AUDIO_SUMMARY" | "CHAPTER_SUMMARY" | "IAB")]?
                                                }?
                                              }?
                                            },
                                            ?custom_output_configuration: {
                                              blueprints: Array[
                                                {
                                                  blueprint_arn: ::String,
                                                  blueprint_version: ::String?,
                                                  blueprint_stage: ("DEVELOPMENT" | "LIVE")?
                                                },
                                              ]?
                                            },
                                            ?override_configuration: {
                                              document: {
                                                splitter: {
                                                  state: ("ENABLED" | "DISABLED")?
                                                }?
                                              }?
                                            }
                                          ) -> _UpdateDataAutomationProjectResponseSuccess
                                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateDataAutomationProjectResponseSuccess
    end
  end
end

