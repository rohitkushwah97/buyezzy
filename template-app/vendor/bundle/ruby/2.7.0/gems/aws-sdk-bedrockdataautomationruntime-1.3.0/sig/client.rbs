# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module BedrockDataAutomationRuntime
    class Client < ::Seahorse::Client::Base
      include ::Aws::ClientStubs

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BedrockDataAutomationRuntime/Client.html#initialize-instance_method
      def self.new: (
                      ?credentials: untyped,
                      ?region: String,
                      ?access_key_id: String,
                      ?account_id: String,
                      ?active_endpoint_cache: bool,
                      ?adaptive_retry_wait_to_fill: bool,
                      ?client_side_monitoring: bool,
                      ?client_side_monitoring_client_id: String,
                      ?client_side_monitoring_host: String,
                      ?client_side_monitoring_port: Integer,
                      ?client_side_monitoring_publisher: untyped,
                      ?convert_params: bool,
                      ?correct_clock_skew: bool,
                      ?defaults_mode: String,
                      ?disable_host_prefix_injection: bool,
                      ?disable_request_compression: bool,
                      ?endpoint: String,
                      ?endpoint_cache_max_entries: Integer,
                      ?endpoint_cache_max_threads: Integer,
                      ?endpoint_cache_poll_interval: Integer,
                      ?endpoint_discovery: bool,
                      ?ignore_configured_endpoint_urls: bool,
                      ?log_formatter: untyped,
                      ?log_level: Symbol,
                      ?logger: untyped,
                      ?max_attempts: Integer,
                      ?profile: String,
                      ?request_checksum_calculation: String,
                      ?request_min_compression_size_bytes: Integer,
                      ?response_checksum_validation: String,
                      ?retry_backoff: Proc,
                      ?retry_base_delay: Float,
                      ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer),
                      ?retry_limit: Integer,
                      ?retry_max_delay: Integer,
                      ?retry_mode: ("legacy" | "standard" | "adaptive"),
                      ?sdk_ua_app_id: String,
                      ?secret_access_key: String,
                      ?session_token: String,
                      ?sigv4a_signing_region_set: Array[String],
                      ?simple_json: bool,
                      ?stub_responses: untyped,
                      ?telemetry_provider: Aws::Telemetry::TelemetryProviderBase,
                      ?token_provider: untyped,
                      ?use_dualstack_endpoint: bool,
                      ?use_fips_endpoint: bool,
                      ?validate_params: bool,
                      ?endpoint_provider: untyped,
                      ?http_proxy: String,
                      ?http_open_timeout: (Float | Integer),
                      ?http_read_timeout: (Float | Integer),
                      ?http_idle_timeout: (Float | Integer),
                      ?http_continue_timeout: (Float | Integer),
                      ?ssl_timeout: (Float | Integer | nil),
                      ?http_wire_trace: bool,
                      ?ssl_verify_peer: bool,
                      ?ssl_ca_bundle: String,
                      ?ssl_ca_directory: String,
                      ?ssl_ca_store: String,
                      ?on_chunk_received: Proc,
                      ?on_chunk_sent: Proc,
                      ?raise_response_errors: bool
                    ) -> instance
                  | (?Hash[Symbol, untyped]) -> instance


      interface _GetDataAutomationStatusResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetDataAutomationStatusResponse]
        def status: () -> ("Created" | "InProgress" | "Success" | "ServiceError" | "ClientError")
        def error_type: () -> ::String
        def error_message: () -> ::String
        def output_configuration: () -> Types::OutputConfiguration
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BedrockDataAutomationRuntime/Client.html#get_data_automation_status-instance_method
      def get_data_automation_status: (
                                        invocation_arn: ::String
                                      ) -> _GetDataAutomationStatusResponseSuccess
                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetDataAutomationStatusResponseSuccess

      interface _InvokeDataAutomationAsyncResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::InvokeDataAutomationAsyncResponse]
        def invocation_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BedrockDataAutomationRuntime/Client.html#invoke_data_automation_async-instance_method
      def invoke_data_automation_async: (
                                          ?client_token: ::String,
                                          input_configuration: {
                                            s3_uri: ::String
                                          },
                                          output_configuration: {
                                            s3_uri: ::String
                                          },
                                          ?data_automation_configuration: {
                                            data_automation_arn: ::String,
                                            stage: ("LIVE" | "DEVELOPMENT")?
                                          },
                                          ?encryption_configuration: {
                                            kms_key_id: ::String,
                                            kms_encryption_context: Hash[::String, ::String]?
                                          },
                                          ?notification_configuration: {
                                            event_bridge_configuration: {
                                              event_bridge_enabled: bool
                                            }
                                          },
                                          ?blueprints: Array[
                                            {
                                              blueprint_arn: ::String,
                                              version: ::String?,
                                              stage: ("DEVELOPMENT" | "LIVE")?
                                            },
                                          ]
                                        ) -> _InvokeDataAutomationAsyncResponseSuccess
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _InvokeDataAutomationAsyncResponseSuccess
    end
  end
end

